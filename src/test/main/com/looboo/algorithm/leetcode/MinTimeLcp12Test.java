package com.looboo.algorithm.leetcode;

import org.junit.Test;

import static org.junit.Assert.*;

public class MinTimeLcp12Test {

    @Test
    public void test01() {
        int[] ints = Utils.intArray1d("[1,2,3,3]");
        assertEquals(3, new MinTimeLcp12().minTime(ints, 2));
    }

    @Test
    public void test02() {
        int[] ints = Utils.intArray1d("[999,999,999]");
        assertEquals(0, new MinTimeLcp12().minTime(ints, 4));
    }

    @Test
    public void test03() {
        int[] ints = Utils.intArray1d("[1,2,3,3,3]");
        assertEquals(3, new MinTimeLcp12().minTime(ints, 2));
    }

    @Test
    public void test04() {
        int[] ints = Utils.intArray1d("[22,20,93,60,64,41,69,81,35,3,50,26,9,32,52,76,77,12,83,55,58,31,5,92,50,7,43,12,35,11,33,25,92,6,70,1,60,46,49,74,10,19,99,18,2,3,64,56,64,72,38,59,83,24,97,2,59,52,35,90,58,41,24,73,24,2,44,99,100,72,15,94,65,59,68,49,27,33,47,52,71,19,96,22,48,12,85,37,71,38,35,3,66,46,32,10,16,17,36,18,87,62,91,90,29,21,3,32,71,51,57,37,36,1,33,39,26,1,44,50,41,44,10,88,72,90,52,15,97,86,71,30,47,16,91,99,33,99,33,52,27,23,67,62,85,43,93,60,50,98,16,39,99,57,54,53,26,25,56,48,15,65,92,34,57,96,99,76,39,99,93,76,64,32,4,93,33,51,13,16,63,28,84,61,97,8,9,71,89,19,62,84,34,9,90,20,9,18,95,9,78,80,65,81,85,92,29,66,56,43,81,44,95,9,44,85,21,29,19,80,1,52,82,20,79,14,98,3,41,13,11,36,4,40,3,12,13,73,82,80,85,81,14,9,25,82,73,72,49,33,55,96,99,58,92,33,8,89,94,55,88,89,29,53,74,67,9,88,90,44,93,7,95,43,25,32,94,75,33,13,29,9,86,50,92,57,36,27,33,2,49,28,35,82,77,61,62,11,49,8,12,78,66,6,100,5,74,10,46,43,1,95,89,3,81,66,61,100,53,25,95,86,5,23,77,35,24,25,9,96,33,69,43,60,76,10,66,49,12,98,54,97,27,25,26,9,50,72,59,83,4,97,88,8,15,38,73,57,52,32,75,32,30,33,12,6,94,93,25,44,85,19,28,45,68,35,40,30,47,87,61,50,32,37,54,76,79,70,21,65,93,54,89,55,53,24,97,17,42,24,59,41,5,38,66,69,71,27,17,18,21,57,7,44,35,86,60,58,6,1,98,44,96,68,87,43,41,63,40,30,42,52,74,32,80,26,75,44,99,34,3,15,57,73,82,71,70,11,50,69,62,93,50,71,15,24,93,90,70,57,51,25,56,45,82,10,80,62,75,8,32,15,2,85,87,54,89,7,32,79,56,64,80,28,61,37,9,78,28,38,3,12,8,19,70,30,83,47,77,13,74,47,16,73,17,58,64,97,98,80,44,89,43,45,78,20,80,64,100,76,75,31,86,87,93,19,16,54,11,90,39,50,22,41,68,16,68,3,84,96,56,88,56,87,32,30,61,51,90,49,29,90,52,52,73,19,84,48,29,84,81,98,30,36,65,23,26,59,22,87,69,18,45,6,4,10,60,50,81,12,79,43,97,90,26,43,87,94,18,100,34,58,23,52,58,17,70,96,24,45,78,2,13,75,74,68,45,70,60,23,40,71,43,24,57,40,89,58,45,9,3,23,7,67,78,24,56,19,28,36,69,11,62,5,24,17,30,5,3,55,60,50,69,66,86,19,2,35,54,57,76,8,16,80,6,22,36,76,62,6,44,13,16,49,27,69,79,82,56,73,30,64,5,56,2,77,57,79,44,5,39,78,60,66,30,41,92,72,3,90,14,19,81,1,11,64,64,15,77,80,100,18,49,36,37,76,82,16,56,79,58,34,12,43,80,90,77,43,64,32,18,38,22,43,80,49,1,6,86,51,66,60,56,25,73,18,10,23,91,100,97,17,71,2,23,76,19,85,33,37,77,63,67,68,51,98,3,33,95,20,75,65,84,7,50,23,11,17,70,33,26,64,26,65,84,35,12,17,39,88,82,59,79,4,100,40,94,57,6,5,14,93,78,31,65,2,86,93,56,36,38,13,64,68,57,76,49,60,8,94,59,91,90,26,47,84,88,63,71,19,76,44,37,77,51,71,22,44,100,97,36,29,21,11,89,58,60,53,49,55,68,98,77,84,69,4,24,81,22,58,72,63,58,73,87,94,52,30,4,77,92,22,5,99,76,65,19,5,26,24,2,4,39,88,62,4,9,89,7,3,3,99,45,46,38,30,37,47,24,27,89,21,26,74,98,58,81,7,33,20,27,55,81,98,93,66,65,21,92,80,23,93,71,100,96,87,85,35,57,41,4,22,50,95,52,78,27,30,80,41,63,57,21,49,23,85,10,2,41,64,29,92,11,1,45,10,76,79,1,91,43,17,97,67,46,54,4,1,51,81,16,61,49,85,33,94,12,3,46,20,26,48,94,77,37,18,29,67,4,92,74,88,93,97,97,69,68,2,68,65,64,70,60,11,70,2,56,46,38,82]");
        assertEquals(52, new MinTimeLcp12().minTime1(ints, 536));
    }

}